{"version":3,"file":"static/js/137.3bc70f32.chunk.js","mappings":"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","sources":["components/Table/Table.styled.js","components/Table/Table.jsx","components/SelectBar/SelectBar.jsx","components/SearchInput/SearchInput.jsx","components/FilterBar/FilterBar.styled.js","sources/filters.js","components/FilterBar/FilterBar.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport TableCell from \"@mui/material/TableCell\";\n\nexport const TableCellWrap = styled.div`\n  height: 71px;\n  overflow: hidden;\n  word-wrap: break-word;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  \n`;\n\nexport const StyledTableCell = styled(TableCell)`\n  color: var(--darkText);\n  font-family: \"Noto Sans\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 157%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  font-feature-settings: \"clig\" off, \"liga\" off;\n  border: 1px solid #efeff3;\n  padding: 8px 16px;\n  .centered {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n  }\n  &.title-cell:hover {\n    cursor: pointer;\n    text-decoration-line: underline;\n  }\n  &:not(:last-child) {\n    border-right: 1px solid #efeff3;\n  }\n`;\n","import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { setPage, setRowsPerPage } from \"../../redux/News/slice\";\nimport {\n  selectError,\n  selectIsLoading,\n  selectPage,\n  selectRowsPerPage,\n  selectTopNews,\n  selectTotalResults,\n} from \"../../redux/News/selectors\";\n\nimport { Loader } from \"../Loader/Loader\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\n\nimport { StyledTableCell, TableCellWrap } from \"./Table.styled\";\n\nconst columns = [\n  { id: \"image\", label: \"Image\", minWidth: 100 },\n  { id: \"title\", label: \"Title\", minWidth: 222 },\n  {\n    id: \"authors\",\n    label: \"Authors\",\n    minWidth: 164,\n  },\n  {\n    id: \"description\",\n    label: \"Description\",\n    minWidth: 291,\n  },\n  {\n    id: \"date\",\n    label: \"Publication date\",\n    minWidth: 112,\n  },\n  {\n    id: \"URL\",\n    label: \"Original URL\",\n    minWidth: 87,\n  },\n];\n\nexport default function StickyHeadTable() {\n  const topNews = useSelector(selectTopNews);\n  const totalResults = useSelector(selectTotalResults);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const page = useSelector(selectPage);\n\n  const rowsPerPage = useSelector(selectRowsPerPage);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleChangePage = (event, newPage) => {\n    dispatch(setPage(newPage));\n    updateURLParams({ page: newPage + 1 });\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    dispatch(setRowsPerPage(event.target.value));\n    dispatch(setPage(0));\n    updateURLParams({ page: 1 });\n  };\n\n  const updateURLParams = (params) => {\n    const queryParams = new URLSearchParams(window.location.search);\n\n    Object.entries(params).forEach(([key, value]) => {\n      queryParams.set(key, value);\n    });\n\n    const newURL = `${window.location.pathname}?${queryParams.toString()}`;\n    window.history.replaceState({}, \"\", newURL);\n  };\n\n  const convertToSlug = (text) => {\n    return text\n      .toLowerCase()\n      .replace(/[^\\w\\s-]/g, \"\")\n      .replace(/\\s+/g, \"-\")\n      .replace(/--+/g, \"-\")\n      .trim();\n  };\n\n  if (isLoading) return <Loader />;\n\n  const handleRowClick = (row) => {\n    const formattedTitle = convertToSlug(row.title);\n    navigate(`/article/${formattedTitle}`, { state: { row } });\n  };\n\n  if (error) return <p>{error}</p>;\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ width: \"1180px\", margin: \"auto\" }}>\n        <Table\n          stickyHeader\n          aria-label=\"sticky table\"\n          sx={{ tableLayout: \"fixed\" }}\n        >\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <StyledTableCell\n                  key={column.id}\n                  align=\"left\"\n                  sx={{\n                    minWidth: column.minWidth,\n                    maxWidth: column.minWidth,\n                    width: column.minWidth,\n                    backgroundColor: \"#ECF0F6\",\n                  }}\n                >\n                  {column.label}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {topNews.map((row) => {\n              const originalDate = row.publishedAt;\n              const formattedDate = new Date(originalDate)\n                .toISOString()\n                .split(\"T\")[0];\n\n              return (\n                row.url !== \"https://removed.com\" && (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.url}>\n                    <StyledTableCell>\n                      <TableCellWrap className=\"centered\">\n                        {\" \"}\n                        <img src={row.urlToImage} alt={row.title} />\n                      </TableCellWrap>\n                    </StyledTableCell>\n                    <StyledTableCell className=\"title-cell\">\n                      <TableCellWrap\n                        onClick={() => handleRowClick(row)}\n                        className=\"title-cell\"\n                      >\n                        {row.title}\n                      </TableCellWrap>\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      <TableCellWrap>{row.author}</TableCellWrap>\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      <TableCellWrap>{row.description}</TableCellWrap>\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      <TableCellWrap className=\"centered\">\n                        {formattedDate}\n                      </TableCellWrap>\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      <TableCellWrap className=\"centered\">\n                        <a href={row.url} className=\"svg-link\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"21\"\n                            height=\"21\"\n                            viewBox=\"0 0 21 21\"\n                            fill=\"none\"\n                          >\n                            <path\n                              d=\"M14.6666 6.21796H12.1666C11.7083 6.21796 11.3333 6.59296 11.3333 7.05129C11.3333 7.50962 11.7083 7.88462 12.1666 7.88462H14.6666C16.0416 7.88462 17.1666 9.00962 17.1666 10.3846C17.1666 11.7596 16.0416 12.8846 14.6666 12.8846H12.1666C11.7083 12.8846 11.3333 13.2596 11.3333 13.718C11.3333 14.1763 11.7083 14.5513 12.1666 14.5513H14.6666C16.9666 14.5513 18.8333 12.6846 18.8333 10.3846C18.8333 8.08462 16.9666 6.21796 14.6666 6.21796ZM7.16663 10.3846C7.16663 10.843 7.54163 11.218 7.99996 11.218H13C13.4583 11.218 13.8333 10.843 13.8333 10.3846C13.8333 9.92629 13.4583 9.55129 13 9.55129H7.99996C7.54163 9.55129 7.16663 9.92629 7.16663 10.3846ZM8.83329 12.8846H6.33329C4.95829 12.8846 3.83329 11.7596 3.83329 10.3846C3.83329 9.00962 4.95829 7.88462 6.33329 7.88462H8.83329C9.29163 7.88462 9.66663 7.50962 9.66663 7.05129C9.66663 6.59296 9.29163 6.21796 8.83329 6.21796H6.33329C4.03329 6.21796 2.16663 8.08462 2.16663 10.3846C2.16663 12.6846 4.03329 14.5513 6.33329 14.5513H8.83329C9.29163 14.5513 9.66663 14.1763 9.66663 13.718C9.66663 13.2596 9.29163 12.8846 8.83329 12.8846Z\"\n                              fill=\"black\"\n                              fillOpacity=\"0.54\"\n                            />\n                          </svg>\n                        </a>\n                      </TableCellWrap>\n                    </StyledTableCell>\n                  </TableRow>\n                )\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 20]}\n        component=\"div\"\n        count={totalResults || 0}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { Button } from \"@mui/material\";\n\nexport default function SelectBar({\n  selectType,\n  values,\n  onChange,\n  selectedValue,\n}) {\n  const handleChange = (e) => {\n    onChange(e.target.value);\n  };\n\n  const handleReset = () => {\n    onChange(\"\");\n  };\n\n  return (\n    <Box sx={{ minWidth: 250 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">{selectType}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={selectedValue}\n          label={selectType}\n          onChange={handleChange}\n          sx={{\n            \"& .MuiSelect-select.MuiSelect-select\": {\n              textAlign: \"left\",\n            },\n          }}\n        >\n          {values &&\n            values.map((value) => (\n              <MenuItem key={value} value={value}>\n                {value}\n              </MenuItem>\n            ))}\n        </Select>\n        {selectedValue && (\n          <Button variant=\"text\" onClick={handleReset}>\n            Reset\n          </Button>\n        )}\n      </FormControl>\n    </Box>\n  );\n}\n","import { useState } from \"react\";\n\nimport {\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  TextField,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nexport const SearchInput = ({ onKeyPress, onChange, value, handleSearch }) => {\n  const [focused, setFocused] = useState(false);\n\n  return (\n    <div>\n      <div style={{ position: \"relative\" }}>\n        <InputLabel\n          htmlFor=\"outlined-search\"\n          sx={{\n            position: \"absolute\",\n            left: \"50px\",\n            top: focused ? \"-6px\" : \"14px\",\n            zIndex: 1,\n            backgroundColor: \"white\",\n            padding: \"0 5px\",\n            transition: \"top 0.3s, font-size 0.3s\",\n            fontSize: focused ? \"0.75rem\" : \"1rem\",\n          }}\n        >\n          Search article\n        </InputLabel>\n        <TextField\n          id=\"outlined-search\"\n          type=\"search\"\n          variant=\"outlined\"\n          onFocus={() => setFocused(true)}\n          onBlur={(e) => {\n            if (e.target.value === \"\") {\n              setFocused(false);\n            }\n          }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <IconButton\n                  onClick={() => handleSearch(value)}\n                  disabled={!value}\n                >\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n            sx: {\n              \"& .MuiInputBase-input\": {\n                height: \"34px\",\n                width: \"250px\",\n                padding: \"10px 14px\",\n                textAlign: \"start\",\n              },\n              \"&:hover fieldset\": {\n                borderColor: \"green\",\n              },\n            },\n          }}\n          onKeyPress={onKeyPress}\n          onChange={onChange}\n          value={value}\n        />\n      </div>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const StyledFilterBar = styled.div`\nwidth: inherit;\n  margin-bottom: 20px;\n`;\n\nexport const FilterDescription = styled.p`\n  color: #212932;\n  font-feature-settings: \"clig\" off, \"liga\" off;\n  font-family: Noto Sans;\n  font-size: 22px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 133.4%;\n`;\n\nexport const SearchBarWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const FilterBarWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n`;\n\nexport const SelectBarWrap = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 20px;\n`;\n","export const CATEGORIES = [\n    \"business\",\n    \"entertainment\",\n    \"general\",\n    \"health\",\n    \"science\",\n    \"sports\",\n    \"technology\",\n  ];\n\n  export const COUNTRIES = {\n    ae: \"United Arab Emirates\",\n    ar: \"Argentina\",\n    at: \"Austria\",\n    au: \"Australia\",\n    be: \"Belgium\",\n    bg: \"Bulgaria\",\n    br: \"Brazil\",\n    ca: \"Canada\",\n    ch: \"Switzerland\",\n    cn: \"China\",\n    co: \"Colombia\",\n    cu: \"Cuba\",\n    cz: \"Czech Republic\",\n    de: \"Germany\",\n    eg: \"Egypt\",\n    fr: \"France\",\n    gb: \"United Kingdom\",\n    gr: \"Greece\",\n    hk: \"Hong Kong\",\n    hu: \"Hungary\",\n    id: \"Indonesia\",\n    ie: \"Ireland\",\n    il: \"Israel\",\n    in: \"India\",\n    it: \"Italy\",\n    jp: \"Japan\",\n    kr: \"South Korea\",\n    lt: \"Lithuania\",\n    lv: \"Latvia\",\n    ma: \"Morocco\",\n    mx: \"Mexico\",\n    my: \"Malaysia\",\n    ng: \"Nigeria\",\n    nl: \"Netherlands\",\n    no: \"Norway\",\n    nz: \"New Zealand\",\n    ph: \"Philippines\",\n    pl: \"Poland\",\n    pt: \"Portugal\",\n    ro: \"Romania\",\n    rs: \"Serbia\",\n    ru: \"Russia\",\n    sa: \"Saudi Arabia\",\n    se: \"Sweden\",\n    sg: \"Singapore\",\n    si: \"Slovenia\",\n    sk: \"Slovakia\",\n    th: \"Thailand\",\n    tr: \"Turkey\",\n    tw: \"Taiwan\",\n    ua: \"Ukraine\",\n    us: \"United States\",\n    ve: \"Venezuela\",\n    za: \"South Africa\",\n  };","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport SelectBar from \"../SelectBar/SelectBar\";\nimport { SearchInput } from \"../SearchInput/SearchInput\";\n\nimport { setPage } from \"../../redux/News/slice\";\nimport {\n  getNewsByHeadersThunk,\n  getTopNewsThunk,\n} from \"../../redux/News/operations\";\nimport { selectRowsPerPage } from \"../../redux/News/selectors\";\n\nimport { Button } from \"@mui/material\";\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\nimport FilterAltOffIcon from \"@mui/icons-material/FilterAltOff\";\nimport {\n  FilterBarWrap,\n  FilterDescription,\n  SearchBarWrap,\n  SelectBarWrap,\n  StyledFilterBar,\n} from \"./FilterBar.styled\";\n\nimport { CATEGORIES, COUNTRIES } from \"../../sources/filters\";\n\nexport const FilterBar = () => {\n  const rowsPerPage = useSelector(selectRowsPerPage);\n\n  const [isBtnClicked, setIsBtnClicked] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const toggleFilters = () => {\n    setIsBtnClicked(!isBtnClicked);\n  };\n\n  const handleCategoryChange = (data) => {\n    setSelectedCategory(data);\n  };\n\n  const handleCountryChange = (data) => {\n    setSelectedCountry(data);\n  };\n\n  const handleSearch = () => {\n    const queryParams = new URLSearchParams();\n    queryParams.set(\"query\", searchValue);\n    navigate(`?${queryParams.toString()}`);\n    dispatch(setPage(0));\n    setSearchValue(\"\");\n  };\n\n  const handleInputChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  const handleSubmit = () => {\n    const selectedCountryCode = getKeyByValue(COUNTRIES, selectedCountry);\n\n    const queryParams = new URLSearchParams();\n    if (selectedCountryCode) {\n      queryParams.set(\"country\", selectedCountryCode);\n    }\n    if (selectedCategory) {\n      queryParams.set(\"category\", selectedCategory);\n    }\n    dispatch(setPage(0));\n\n    navigate(`?${queryParams.toString()}`);\n  };\n\n  const getKeyByValue = (object, value) =>\n    Object.keys(object).find((key) => object[key] === value);\n\n  const COUNTRY_NAMES = Object.values(COUNTRIES);\n\n  return (\n    <StyledFilterBar>\n      <FilterBarWrap>\n        <FilterDescription>Formula Top Headlines</FilterDescription>\n        <SearchBarWrap>\n          <SearchInput\n            onKeyPress={handleKeyPress}\n            onChange={handleInputChange}\n            value={searchValue}\n            handleSearch={() => handleSearch(searchValue)}\n          />\n          <Button\n            onClick={toggleFilters}\n            variant=\"contained\"\n            type=\"button\"\n            startIcon={isBtnClicked ? <FilterAltOffIcon /> : <FilterAltIcon />}\n            sx={{\n              backgroundColor: \"#ECF0F6\",\n              height: 46,\n              width: 115,\n              color: \"#1A232E\",\n            }}\n          >\n            Filter\n          </Button>\n        </SearchBarWrap>\n      </FilterBarWrap>\n      {isBtnClicked && (\n        <SelectBarWrap>\n          <SelectBar\n            selectType=\"Categories\"\n            values={CATEGORIES}\n            onChange={handleCategoryChange}\n            selectedValue={selectedCategory}\n          />\n          <SelectBar\n            selectType=\"Countries\"\n            values={COUNTRY_NAMES}\n            onChange={handleCountryChange}\n            selectedValue={selectedCountry}\n          />\n          <Button\n            variant=\"contained\"\n            onClick={handleSubmit}\n            style={{ height: \"56px\", width: \"168px\" }}\n          >\n            Submit\n          </Button>\n        </SelectBarWrap>\n      )}\n    </StyledFilterBar>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const StledHomePage = styled.section`\n  padding-top: 32px;\n  padding-bottom: 135px;\n`;\n\nexport const CustomContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nmargin: auto;\nwidth: 1180px;\npadding: 0;\n`;\n","import CustomPaginationActionsTable from \"../../components/Table/Table\";\nimport { FilterBar } from \"../../components/FilterBar/FilterBar\";\nimport { CustomContainer, StledHomePage } from \"./HomePage.styled\";\n\nconst HomePage = () => {\n  return (\n    <StledHomePage>\n      <CustomContainer>\n        <FilterBar />\n        <CustomPaginationActionsTable />\n      </CustomContainer>\n    </StledHomePage>\n  );\n};\n\nexport default HomePage;\n"],"names":["TableCellWrap","styled","div","_templateObject","_taggedTemplateLiteral","StyledTableCell","TableCell","_templateObject2","columns","id","label","minWidth","StickyHeadTable","topNews","useSelector","selectTopNews","totalResults","selectTotalResults","isLoading","selectIsLoading","error","selectError","page","selectPage","rowsPerPage","selectRowsPerPage","navigate","useNavigate","dispatch","useDispatch","updateURLParams","params","queryParams","URLSearchParams","window","location","search","Object","entries","forEach","_ref","key","value","set","newURL","concat","pathname","toString","history","replaceState","_jsx","Loader","children","_jsxs","Paper","sx","width","overflow","TableContainer","margin","Table","stickyHeader","tableLayout","TableHead","TableRow","map","column","align","maxWidth","backgroundColor","TableBody","row","originalDate","publishedAt","formattedDate","Date","toISOString","split","url","hover","role","tabIndex","className","src","urlToImage","alt","title","onClick","formattedTitle","toLowerCase","replace","trim","state","handleRowClick","author","description","href","xmlns","height","viewBox","fill","d","fillOpacity","TablePagination","rowsPerPageOptions","component","count","onPageChange","handleChangePage","event","newPage","setPage","onRowsPerPageChange","setRowsPerPage","target","SelectBar","selectType","values","onChange","selectedValue","Box","FormControl","fullWidth","InputLabel","Select","labelId","e","textAlign","MenuItem","Button","variant","handleReset","SearchInput","onKeyPress","handleSearch","focused","setFocused","useState","style","position","htmlFor","left","top","zIndex","padding","transition","fontSize","TextField","type","onFocus","onBlur","InputProps","startAdornment","InputAdornment","IconButton","disabled","SearchIcon","borderColor","StyledFilterBar","FilterDescription","p","SearchBarWrap","_templateObject3","FilterBarWrap","_templateObject4","SelectBarWrap","_templateObject5","CATEGORIES","COUNTRIES","ae","ar","at","au","be","bg","br","ca","ch","cn","co","cu","cz","de","eg","fr","gb","gr","hk","hu","ie","il","in","it","jp","kr","lt","lv","ma","mx","my","ng","nl","no","nz","ph","pl","pt","ro","rs","ru","sa","se","sg","si","sk","th","tr","tw","ua","us","ve","za","FilterBar","isBtnClicked","setIsBtnClicked","selectedCategory","setSelectedCategory","selectedCountry","setSelectedCountry","searchValue","setSearchValue","getKeyByValue","object","keys","find","COUNTRY_NAMES","toggleFilters","startIcon","FilterAltOffIcon","FilterAltIcon","color","data","handleSubmit","selectedCountryCode","StledHomePage","section","CustomContainer","HomePage","CustomPaginationActionsTable"],"sourceRoot":""}